@using Microsoft.AspNet.Identity
@model InfoCom.ViewModels.PostViewModel
@{
    ViewBag.Title = "Feed";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<link href="~/Content/Site.css" rel="stylesheet" type="text/css" />

<div class="col-xs-4 pull-right">
    <div class="sidebar-nav-fixed sidebarMenue">
        <div class="well" style="margin-top:5px;margin-bottom:5px;">
            <a href="@Url.Action("Index", "Post")" class="btn btn-block btn-primary"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Write new blog post</a>
        </div>
        <div class="well" id="feed-settings-well" style="margin-top:5px;margin-bottom:5px;">
            <h4>Feed settings</h4>
            @using (Html.BeginForm("Index", "Feed", FormMethod.Post, new { id = "feed-settings" }))
            {
                <div class="form-group">

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Formal, "All", new { @checked = "checked" }) All
                    </label>

                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Formal, "Formal") Formal
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.Formal, "Informal") Informal
                    </label>
                </div>
                <div class="form-group">
                    <label>Category</label>
                    @Html.DropDownListFor(model => model.CategoryId, Model.Categories, htmlAttributes: new { @class = "form-control", @id = "selected-category" })
                </div>

                if (User.IsInRole("Admin"))
                {
                    <div class="checkbox">
                        <label>@Html.CheckBoxFor(m => m.ShowHidden)Show hidden posts</label>
                    </div>
                }
                <input class="btn btn-block btn-primary" type="submit" value="Save" />
            }
        </div>

        <div class="well pre-scrollable" style="margin-top:5px;margin-bottom:5px;">
            <div id="calendar-container">
                <div id="calendar-center">
                    <div id="calendar"></div>
                </div>
            </div>
            <div id="event-content"></div>
        </div>
    </div>
</div>

@if (Model.PostList.Any())
{
    foreach (var item in Model.PostList)
    {
        var divClass = "col-xs-8";
        if (item.Inactive)
        {
            divClass = "col-lg-8 alert-danger";
        }

        <div class="@divClass">

            @if (item.Formal)
            {
                <h1>@item.Title (Formal)</h1>

            }
            else
            {
                <h1>@item.Title (Informal)</h1>
            }

            <p class="lead">
                by @item.Author.Username
            </p>
            <p><span class="glyphicon glyphicon-time"></span> Posted on @item.CreatedAt.DayOfWeek.ToString() @item.CreatedAt.ToString("MMM") @item.CreatedAt.Day, @item.CreatedAt.Year at @item.CreatedAt.ToString("HH:mm tt")</p>

            <hr>
            @if (Model.FileList != null)
            {
                foreach (var file in item.Files)
                {
                    if (file.Post.Id == item.Id && file.FilePath.EndsWith(".jpg") || file.FilePath.EndsWith(".png") || file.FilePath.EndsWith(".GIF"))
                    {

                        <img class="img-responsive" src="@Url.Content(file.FilePath)" alt="@file.Id">



                    }
                    if (file.FilePath.EndsWith(".rtf")
                        || file.FilePath.EndsWith(".pdf")
                        || file.FilePath.EndsWith(".docx")
                        || file.FilePath.EndsWith(".doc")
                        || file.FilePath.EndsWith(".txt")
                        || file.FilePath.EndsWith(".ppt")
                        || file.FilePath.EndsWith(".xls")
                        || file.FilePath.EndsWith(".xlsx") && file.Post.Id == item.Id)

                    {

                        <a href="@Url.Content(@file.FilePath)">@file.FilePath.Substring(12)</a>
                    }

                }
            }



            <hr>

            <p>
                @(item.Content.Length > 200 ? item.Content.Substring(0, 300) + "..." : item.Content)
            </p>

            <hr>
            @Html.ActionLink("Read more","Read", "Post", new { id = item.Id }, new { @class = "btn btn-primary" })
            @if (item.Author.Id == Convert.ToInt32(User.Identity.GetUserId()) || User.IsInRole("Admin"))
            {
                if (!item.Inactive)
                {
                    <button class="btn btn-danger">Hide this post</button>
                }
                else
                {
                    <button class="btn btn-success">Show this post</button>
                }

            }
            <hr />
        </div>
    }
}
else
{
    <h4>No posts found :(</h4>
}



@section Scripts {
    @Scripts.Render("~/Scripts/jquery-ui-1.12.1.js")
    @Scripts.Render("~/Scripts/calendarScripts.js")
}